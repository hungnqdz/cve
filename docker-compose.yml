version: '3.9'

networks:
  public_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
  
  lan_1:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24

  lan_2:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.20.0/24

  lan_3:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.30.0/24


services:
  web:
    build:
      context: ./activemq_server
      dockerfile: Dockerfile
    container_name: public_web_service
    environment:
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    privileged: true
    networks:
      lan_3:
        ipv4_address: 192.168.30.100

  ws1:
    build:
      context: ./ws1
      dockerfile: Dockerfile
    privileged: true
    container_name: ws1
    environment:
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    networks:
      lan_1:
        ipv4_address: 192.168.10.10

  db:
    image: mariadb:10.6.4-focal
    container_name: database
    command: '--default-authentication-plugin=mysql_native_password'
    volumes:
      - ./db_data:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=somewordpress
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wordpress
      - MYSQL_PASSWORD=wordpress
    expose:
      - 3306
      - 33060
    networks:
      lan_1:
        ipv4_address: 192.168.10.13

  wordpress:
    depends_on:
      - db
    build:
      context: ./wp_internal
    volumes:
      - ./wordpress_data:/var/www/html
    restart: always
    container_name: wp_internal
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
    ports:
      - "8081:80"
    expose:
      - 80
    networks:
      lan_1:
        ipv4_address: 192.168.10.12

  
  attacker:
    build:
      context: ./attacker
      dockerfile: Dockerfile
    container_name: attacker
    privileged: true
    environment:
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    networks:
      public_net:
        ipv4_address: 172.18.0.2

  php_internal:
    build:
      context: ./web_service_php
      dockerfile: Dockerfile
    container_name: php_internal
    privileged: true
    environment:
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true
    tty: true
    networks:
      lan_1:
        ipv4_address: 192.168.10.11


  outer_gw:
    privileged: true
    build:
      context: ./outer_gw
      dockerfile: Dockerfile
    container_name: outer_gw
    ports:
      - "8080:80"
      - "61616:61616"
    networks:
      lan_3:
        ipv4_address: 192.168.30.2
      public_net:
        ipv4_address: 172.18.0.3

  inner_gw:
    privileged: true
    build:
      context: ./inner_gw
      dockerfile: Dockerfile
    container_name: inner_gw
    networks:
      lan_1:
        ipv4_address: 192.168.10.2
      lan_2:
        ipv4_address: 192.168.20.2
      lan_3:
        ipv4_address: 192.168.30.3
